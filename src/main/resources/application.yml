spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: "jdbc:h2:mem:ssop;MODE=MYSQL;NON_KEYWORDS=USER"
    username: "sa"
    password: ""
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        dialect: org.hibernate.dialect.H2Dialect
    open-in-view: false
  h2:
    console:
      enabled: true
      path: /h2-console
jwt:
  header: Authorization
  secret: c3d1LWRpZ2l0YWxtZWRpYS0yMDI0LXNzb3AtYmFja2VuZC1zcHJpbmctYm9vdC1qd3Qtc2VjcmV0LWtleS10b2tlbi1zc29w
  # swu-digital-media-2024-ssop ~~~ 인코딩한 비밀 키랑 연동 > HS512 알고리즘 사용 > 64byte
  token-validity-in-seconds: 86400    # 초, 24시간
---
server:
  port: 8080
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: "jdbc:mysql://localhost/ssop"
    username: "root"
    password: "1234"
    #    password: "Ssop242401@#"
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa :
    hibernate:
      #스프링 시작 시 DB에 있는 테이블을 어떻게 처리할 지
      ddl-auto: update
        #ddl-auto 속성 종류
        #create : 시작 시 기존 테이블 삭제 후 생성
        #creae-drop : 종료 시 테이블 삭제
        #update : 변경사항만 반영
        #validate : 생성/수정하지 않고 정상 매핑되는지만 검사
      #none : 아무 일도 안일어남
    properties:
      hibernate:
        format_sql: true #JPA 사용해 DB에 SQL날릴 때 SQL을 예쁘게 포맷팅할 지 결정
        show_sql: false #JPA 사용해 DB에 SQL날릴 때 SQL 보여줄 지 결정
        dialect: org.hibernate.dialect.MySQL8Dialect #한국어로 방언, 사투리란 뜻으로 알아서 db끼리 다른 sql 조금씩 수정
  security:
    oauth2:
      client:
        registration:
          kakao:
            client_id: ${kakao.client.id}
            client-secret: ${kakao.client.secret}
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost.8080/login/kakao
            client-name: Kakao
            client-authentication-method: client_secret_post
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  servlet:
    multipart:    # 파일 업로드 처리
      enabled: true   # multipart 업로드 기능 활성회(multipart/form-data 형식 요청 처리 가능)(파일 업로드 지원)
      max-file-size: 10MB # 업로드할 수 있는 파일 최대 크기
      max-request-size: 10MB  # 업로드 요청의 전체 최대 크기(요청 본문에서 전송되는 모든 파일과 데이터의 총합이 10MB를 초과할 수 없음)
jwt:
  header: Authorization
  secret: c3d1LWRpZ2l0YWxtZWRpYS0yMDI0LXNzb3AtYmFja2VuZC1zcHJpbmctYm9vdC1qd3Qtc2VjcmV0LWtleS10b2tlbi1zc29w
  # swu-digital-media-2024-ssop ~~~ 인코딩한 비밀 키랑 연동 > HS512 알고리즘 사용 > 64byte
  token-validity-in-seconds: 86400    # 초, 24시간